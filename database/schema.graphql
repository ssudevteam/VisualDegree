enum CacheControlScope {
  PUBLIC
  PRIVATE
}

directive @cacheControl(
  maxAge: Int
  scope: CacheControlScope
  inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION


#------------#
# Course     #
#------------#

type Course @cacheControl(maxAge: 7776000) {
  id: ID
  title: String
  prefix: String
  header: String
  code: String
  description: String
  num_units: String
  ge_category: String
  prerequisites: String
  url: String
  department: Department
}

type Query {
  course(id: ID!): Course
  courses: [Course!]!
  coursesByDepartment(departmentId: ID!): [Course!]!
}

type Mutation {
  addCourse(
    title: String
    prefix: String
    header: String
    code: String
    description: String
    prerequisites: String
    url: String
    department: ID
  ): Course

  updateCourse(
    id: ID!
    _: String
    title: String
    prefix: String
    header: String
    code: String
    description: String
    num_units: String
    ge_category: String
    prerequisites: String
    url: String
    department: ID
  ): Course

  deleteCourse(id: ID!): Course
}


#------------#
# Department #
#------------#

type Department @cacheControl(maxAge: 7776000) {
  id: ID
  name: String
  url: String
}

extend type Query {
  department(id: ID!): Department
  departments: [Department!]!
}

extend type Mutation {
  addDepartment(name: String, url: String): Department
  updateDepartment(id: ID!, name: String, url: String): Department
  deleteDepartment(id: ID!): Department
}


#------------#
#   Program  #
#------------#
type Program @cacheControl(maxAge: 7776000) {
  id: ID
  name: String
  url: String
  department: Department
  courses: [Course]
  programType: ProgramType
}

extend type Query {
  program(id: ID!): Program
  programs: [Program!]!
  programsByProgramType(type_id: ID!): [Program!]!
}

extend type Mutation {
  addProgram(
    name: String!
    url: String!
    department: ID!
    courses: String!
    programType: String!
  ): Program

  updateProgram(
    id: ID!
    _: String
    name: String
    url: String
    department: ID
    courses: String
    programType: String
  ): Program

  deleteProgram(id: ID!): Program
}

#------------#
#ProgramType #
#------------#

type ProgramType @cacheControl(maxAge: 7776000) {
  id: ID
  name: String
}

extend type Query {
  programType(id: ID!): ProgramType
  programTypes: [ProgramType!]!
}

extend type Mutation {
  addProgramType(name: String!): ProgramType
  updateProgramType(id: ID!, name: String): ProgramType
  deleteProgramType(id: ID!): ProgramType
}

#------------#
# Schedule   #
#------------#

type Schedule {
  id: ID!
  name: String!
  user: User
  courses: [Course]
}

extend type Query {
  schedule(id: ID!): Schedule
  schedules: [Schedule!]!
}

extend type Mutation {
  addSchedule(user: String, name: String): Schedule
  updateSchedule(id: ID!, _: String, user: String, name: String): Schedule
  deleteSchedule(id: ID!): Schedule
  addCourseToSchedule(scheduleID: ID!, courseID: ID!): Schedule
  dropCourseFromSchedule(scheduleID: ID!, courseID: ID!): Schedule
}
#------------#
#   User    #
#------------#
type User {
  id: ID!
  googleID: String!
  displayName: String!
  name: String
  student_id: String
  email: String!
  unitsEnrolled: String
  unitsTaken: String
  major: Program
  minor: Program
  completed_courses: [Course]
  schedule: [Schedule]
}

extend type Query {
  user(id: ID!): User
  users: [User!]!
  userByGoogleID(googleID: String!): User
  userCountByMajor(programID: ID!): [User!]!
  userCountByUnitsTaken(num_of_units: String!): [User!]!
}

extend type Mutation {
   createUserWithGoogleID(
        googleID: String!
        email: String!
        displayName: String!
    ): User
  updateUser(args: String): User
  deleteUser(id: ID!): User
  addCourseToCompletedCourses(id: ID!, courseId: ID!): User
}





# add manually